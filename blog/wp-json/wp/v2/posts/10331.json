{"id":10331,"date":"2015-09-10T20:20:03","date_gmt":"2015-09-10T17:20:03","guid":{"rendered":"https:\/\/stanfy.com\/?p=10331"},"modified":"2019-10-08T18:12:22","modified_gmt":"2019-10-08T15:12:22","slug":"ble-essentials-for-device-smartphone-software-development","status":"publish","type":"post","link":"https:\/\/www.intellectsoft.net\/blog\/ble-essentials-for-device-smartphone-software-development\/","title":{"rendered":"Bluetooth Low Energy. Essentials for Mobile Developers."},"content":{"rendered":"<p>As we found from our own experience at Stanfy, before diving too deeply into hacking with BLE enabled hardware, it is good to understand some basic concepts and have an infrastructure ready. Bluetooth Low Energy is great for connecting simple devices like sensors but can also work well for heavier applications.<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-10365\" src=\"https:\/\/stanfy.com\/wp-content\/uploads\/2015\/09\/iPhoneBluetoothLEArduino.png\" alt=\"BLE link - Smartphone to board\" width=\"600\" height=\"259\" srcset=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/iPhoneBluetoothLEArduino.png 1874w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/iPhoneBluetoothLEArduino-300x129.png 300w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/iPhoneBluetoothLEArduino-768x331.png 768w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/iPhoneBluetoothLEArduino-1024x442.png 1024w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/iPhoneBluetoothLEArduino-600x259.png 600w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/iPhoneBluetoothLEArduino-450x194.png 450w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/iPhoneBluetoothLEArduino-1000x431.png 1000w\" sizes=\"(max-width: 600px) 100vw, 600px\" \/><\/p>\n<p style=\"text-align: center;\">(Image: <a href=\"http:\/\/don.github.io\/slides\/2014-09-20-makerfaire-bluetooth\/\" target=\"_blank\" rel=\"noopener noreferrer\">don.github.io<\/a>)<\/p>\n<p>Below is a summary of important <strong>information about Bluetooth<\/strong> standard,\u00a0practical <strong>limitations<\/strong> and <strong>tools<\/strong> needed to effectively develop BLE software.<\/p>\n<p>If you are making a decision on which communication standard to choose, make sure to check our review of <a href=\"https:\/\/intllectsoft.net\/blog\/developers-guide-to-iot-standards\/\">existing IoT technologies and wireless protocols<\/a>.<\/p>\n<p style=\"text-align: center;\"><!--more--><\/p>\n<h3>Bluetooth Classic VS Bluetooth Low Energy <strong>\u2013<\/strong>\u00a0they have different stories<\/h3>\n<p>There are a couple of points that need to be understood about the variety of Bluetooth before proceeding to the actual implementation of software or even thinking about hardware.<\/p>\n<p>A lot of confusion is caused by the fact that Bluetooth and Bluetooth Low Energy are rather different things:<\/p>\n<ul>\n<li><strong>Classic Bluetooth<\/strong>. The wireless standard for transferring data over a short distance originally invented as a replacement for wire communications, it is widely used for a variety of tasks including raw data and file transmission, audio transmission for headsets and audio systems and controlling devices remotely.<\/li>\n<li><strong>BLE (Bluetooth Low Energy)<\/strong> is also known as Bluetooth Smart and is a branch of the Bluetooth 4.0 standard. It is a much more limited version compared to Classic. Its main function is as a communication link that requires very low power and can be implemented on devices with limited power (beacons, sensors etc). Compared to the main standard it demonstrates important differences in how a radio signal is transmitted, reduced data transfer rates, limited amount of supported profiles (or how data is exposed), reduced timing intervals to minimize delays when initiating connection and transferring data.<\/li>\n<\/ul>\n<table style=\"margin: auto;\" width=\"600\">\n<tbody>\n<tr>\n<th style=\"text-align: center;\"><\/th>\n<th style=\"text-align: center;\"><b>Bluetooth Classic<\/b><\/th>\n<th style=\"text-align: center;\"><b>Bluetooth Low Energy<\/b><\/th>\n<\/tr>\n<tr>\n<td>Range<\/td>\n<td>100m (Class 1)<\/td>\n<td>~100m<\/td>\n<\/tr>\n<tr>\n<td>Payload throughput (net)<\/td>\n<td>0.7\u20132.1 Mbit\/s<\/td>\n<td>~120 kbit\/s<\/td>\n<\/tr>\n<tr>\n<td>Latency<\/td>\n<td>100ms<\/td>\n<td>6ms<\/td>\n<\/tr>\n<tr>\n<td>Minimum time to send data<\/td>\n<td>100ms<\/td>\n<td>3ms<\/td>\n<\/tr>\n<tr>\n<td>Voice support<\/td>\n<td>Yes<\/td>\n<td>No<\/td>\n<\/tr>\n<tr>\n<td>Reference power consumption<\/td>\n<td>1W<\/td>\n<td>0.01 &#8211; 0.5 W<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p style=\"text-align: center;\">(combined data from: Wikipedia, &#8220;<a href=\"http:\/\/www.amazon.com\/Getting-Started-Bluetooth-Low-Energy\/dp\/1491949511\" target=\"_blank\" rel=\"noopener noreferrer\">Getting started with BLE<\/a>&#8221; )<\/p>\n<p>Unless you want to transfer large amounts of data via Bluetooth link \u2013\u00a0BLE can be an ideal solution, especially in the areas of sensors, wearable electronics, and medical devices, among others.<\/p>\n<p class=\"upgrades\">Choosing between Bluetooth Classic VS Bluetooth Low Energy?\u00a0We have a solid expertise with using both Bluetooth Classic and BLE in mobile apps on Android and iOS platforms for our clients. <a href=\"https:\/\/www.intellectsoft.net\/contacts\">Let&#8217;s talk!<\/a><\/p>\n<h3>Bluetooth LE Communication Architecture<\/h3>\n<p>There are two parties involved in Bluetooth LE links: Server (has data; it is normally your sensor device) and Client (consumes data). Smartphones can play either of these roles depending on the task that you are solving.<\/p>\n<p>When connecting BLE-enabled external devices to a host device like a smartphone, a common configuration would be a BLE Device as the server and iPhone\/Android as the client. In the documentation of BLE those are also referred to as Peripheral (Server) and Central (Client).<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-10333\" src=\"https:\/\/stanfy.com\/wp-content\/uploads\/2015\/09\/CBDevices1_2x.png\" alt=\"BLE central and peripheral devices\" width=\"600\" height=\"357\" srcset=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/CBDevices1_2x.png 942w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/CBDevices1_2x-300x178.png 300w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/CBDevices1_2x-768x457.png 768w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/CBDevices1_2x-600x357.png 600w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/CBDevices1_2x-450x268.png 450w\" sizes=\"(max-width: 600px) 100vw, 600px\" \/><\/p>\n<h3>Generic Attribute Profile (GATT) &#8211; How information is represented<\/h3>\n<p>Peripheral (Server) by its nature can be more than just a simple device that pumps data. It may have some useful functions like \u201cunlock the door lock\u201d. BLE standard provides a unified view for those cases.<\/p>\n<p>If you are at least a little familiar with Bluetooth spec (let me know if you managed to get through the whole spec), then you know that it supports an enormous amount of different protocols on the application level. BLE adopted only one of those, called Generic Attribute Profile (GATT), based on Attribute Protocol (ATT).<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-10336 size-full\" src=\"https:\/\/stanfy.com\/wp-content\/uploads\/2015\/09\/Screenshot-2015-09-10-12.59.33.png\" alt=\"BLE protocol stack\" width=\"253\" height=\"269\" \/><\/p>\n<p>GATT is a service based profile and this means that next. You can imagine Peripheral as a service provider. Those Services expose raw data or perform an activate action on a device (writing data is equal to issuing command). Each service in turn has a set of characteristics that can be read and written. This forms a tree:<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-10338 size-full\" src=\"https:\/\/stanfy.com\/wp-content\/uploads\/2015\/09\/Untitled-2.jpg\" alt=\"Simplified tree of GATT Profile\" width=\"290\" height=\"247\" \/><\/p>\n<p>Additionally, BLE standard also allows you to describe the type of information in Characteristic by specifying it via <a href=\"https:\/\/developer.bluetooth.org\/gatt\/units\/Pages\/default.aspx\" target=\"_blank\" rel=\"noopener noreferrer\">descriptor<\/a>. This is especially valuable if available data is measured in standardised units like millimeters, inches, fahrenheit etc. The full list is available on <a href=\"https:\/\/developer.bluetooth.org\/gatt\/units\/Pages\/default.aspx\" target=\"_blank\" rel=\"noopener noreferrer\">Bluetooth web site<\/a>.<\/p>\n<p>Each Characteristic is also defined by properties which clarify how you can use it: read, write, write-confirm, subscribe etc (<a href=\"https:\/\/www.bluetooth.org\/DocMan\/handlers\/DownloadDoc.ashx?doc_id=282159\" target=\"_blank\" rel=\"noopener noreferrer\">p 3.3.1.1 Vol 3<\/a>).<\/p>\n<p>Services and Characteristics have their own Identifiers (UUID), which can be used for direct access without a need to scan the whole tree.<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-10341 size-full\" src=\"https:\/\/stanfy.com\/wp-content\/uploads\/2015\/09\/BLE-characteristic.jpg\" alt=\"GATT Characteristic structure\" width=\"213\" height=\"220\" \/><\/p>\n<p>There are a number of higher level profiles built on top of GATT for specific needs like Heart Rate Profile, Proximity profile, Device Information Service (you can read more about defined profiles on the <a href=\"https:\/\/developer.bluetooth.org\/TechnologyOverview\/Pages\/BLE.aspx\" target=\"_blank\" rel=\"noopener noreferrer\">BLE page<\/a>).<\/p>\n<h3>Data formats and capabilities with Bluetooth LE<\/h3>\n<p>It\u2019s important to mention that before defining your own service and a set of characteristics, please check the <a href=\"https:\/\/developer.bluetooth.org\/gatt\/services\/Pages\/ServicesHome.aspx\" target=\"_blank\" rel=\"noopener noreferrer\">BLE standard for the list of adopted services<\/a>. This will help you to integrate with existing software or system-provided functionality by keeping naming conventions in line. For example if you are building a medical device and want to measure heart rate or blood pressure, there is a set of predefined services and characteristics for that.<\/p>\n<p>GATT supports a range of <a href=\"https:\/\/developer.bluetooth.org\/gatt\/Pages\/FormatTypes.aspx\" target=\"_blank\" rel=\"noopener noreferrer\">simple data types<\/a>, starting from 1 byte values to Arrays of bytes and strings. Just keep in mind that big chunks would take time to get transferred (why? read further).<\/p>\n<h3>BLE Data transfer limits<\/h3>\n<p>By default GATT limits the size of single packet to a value defined as MTU.<\/p>\n<p>Maximum Transmission Unit (MTU) by Bluetooth 4.1 standard for LE connections is 23 bytes (usually 20 bytes at top protocol levels, other bytes are used for service information). But there is a procedure called \u201cRead\/Write Long Characteristic Values\u201d that allows you to go over the limit with a series of messages. In practice this means that you\u2019d be able to have a transfer ratio of around 125 kbps (133 connections per second * 6 packets * 20 bytes in each packet &#8211; see \u201cGetting started with BLE\u201d). Some people claim to achieve up to 200 kbps ratio on certain chips. If you need higher transfer rates, you should consider protocols other than BLE.<\/p>\n<h3>Apple limitations when dealing with Bluetooth and Bluetooth Smart (BLE)<\/h3>\n<p>Out of the box you can start developing an application for iPhone or iPad without any problems if you are happy with BLE. At the same time, if you need Bluetooth Classic &#8211; you\u2019d have to pass MFI certification and enter Apple\u2019s <a href=\"https:\/\/developer.apple.com\/programs\/mfi\/\" target=\"_blank\" rel=\"noopener noreferrer\">MFI program<\/a>. After that you\u2019d be given access to software frameworks enabled to work with Bluetooth Classic.<\/p>\n<blockquote><p>Quote from Apple docs: The Core Bluetooth framework provides the classes needed for your iOS and Mac apps to communicate with devices that are equipped with Bluetooth low energy wireless technology.<\/p><\/blockquote>\n<p>When designing peripherals to work with Apple devices or selecting Bluetooth chips for your hardware product, please make sure it complies with <a href=\"https:\/\/developer.apple.com\/hardwaredrivers\/BluetoothDesignGuidelines.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Apple requirements<\/a> (starting from physical level to security and supported profiles). This one has a lot of different restrictions like:<\/p>\n<ul>\n<li>The accessory should not require special permissions, such as pairing, authentication, or encryption to discover services and characteristics.<\/li>\n<li>To incorporate authentication in an accessory design, the accessory should support the Authentication Specification of MFi program.<\/li>\n<\/ul>\n<p>In our experience, BLE did its job pretty well on a number of projects.<\/p>\n<h3>Essential Bluetooth LE tools for software developers<\/h3>\n<p>If you are a Mac user, you should definitely start with a set of tools provided by Apple in <a href=\"https:\/\/developer.apple.com\/downloads\/\" target=\"_blank\" rel=\"noopener noreferrer\">Hardware IO tools for Xcode<\/a> (you need to be a registered Apple developer). They contain probably everything that you might need when dealing with Bluetooth devices: Bluetooth Explorer, Packet Logger, Bluetooth validation Guidelines, and more.<\/p>\n<p><strong>Bluetooth Explorer<\/strong> will give you all possible information that you might need starting from the physical level and radio signal parameters to the ability to work with GATT services. For BLE inspection you can use the Low Energy Devices tool to quickly sniff out advertised services and their characteristics and also update data there. This is especially useful when you want to validate what your device is broadcasting.<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-10349\" src=\"https:\/\/stanfy.com\/wp-content\/uploads\/2015\/09\/BluetoothExplorerScreenshot.png\" alt=\"Bluetooth Explorer screenshot\" width=\"600\" height=\"309\" srcset=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/BluetoothExplorerScreenshot.png 1052w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/BluetoothExplorerScreenshot-300x154.png 300w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/BluetoothExplorerScreenshot-768x395.png 768w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/BluetoothExplorerScreenshot-1024x527.png 1024w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/BluetoothExplorerScreenshot-600x309.png 600w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/BluetoothExplorerScreenshot-450x231.png 450w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/BluetoothExplorerScreenshot-1000x514.png 1000w\" sizes=\"(max-width: 600px) 100vw, 600px\" \/><\/p>\n<p><strong>Light Blue<\/strong>. Nice and simple tool to work with BLE devices that allows you to see what is being broadcasted and to manipulate its characteristics. It does not have a pile of other functions like Bluetooth Explorer. <a href=\"https:\/\/itunes.apple.com\/us\/app\/lightblue\/id639944780?mt=12\" target=\"_blank\" rel=\"noopener noreferrer\">MacApp<\/a>, <a href=\"https:\/\/itunes.apple.com\/us\/app\/lightblue-bluetooth-low-energy\/id557428110?mt=8\" target=\"_blank\" rel=\"noopener noreferrer\">application for iOS<\/a>.<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-10350\" src=\"https:\/\/stanfy.com\/wp-content\/uploads\/2015\/09\/LightBlue-screenshot.png\" alt=\"LightBlue screenshot\" width=\"600\" height=\"279\" srcset=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/LightBlue-screenshot.png 1044w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/LightBlue-screenshot-300x139.png 300w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/LightBlue-screenshot-768x357.png 768w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/LightBlue-screenshot-1024x476.png 1024w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/LightBlue-screenshot-600x279.png 600w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/LightBlue-screenshot-450x209.png 450w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/LightBlue-screenshot-1000x465.png 1000w\" sizes=\"(max-width: 600px) 100vw, 600px\" \/><\/p>\n<p>Also if you prefer command line tools then check <a href=\"http:\/\/www.bluez.org\/\" target=\"_blank\" rel=\"noopener noreferrer\">BlueZ<\/a> package for different tools available there. Among them <strong>gatttool<\/strong>. As you might have figured out by its name, it lets you work with services and characteristics of GATT-based Peripheral.<\/p>\n<p>While editing this article, I got a suggestion from @VitaliyMal to mention another useful tool for Mac users: <a href=\"https:\/\/developer.apple.com\/bug-reporting\/ios\/bluetooth\/\" target=\"_blank\" rel=\"noopener noreferrer\">Bluetooth Logs<\/a>. This one can help figure out what is going on underneath the hood when building for Mac or iOS devices.<\/p>\n<h3>Setting Up a Bluetooth LE Virtual Peripheral &#8211; an Emulator<\/h3>\n<p>An important question when building software for BLE device is \u201chow to test it\u201d. It has to be answered before jumping into the volcano of problem solving. Of course we can stub multiple layers on the client application to test separate units but for integration testing that won\u2019t be enough. When that moment comes having a real device is great. Even more &#8211; you have to have the latest version of the device to test at some point. But lets face reality: when was that last moment when you had everything you needed when writing that app? Having something instead of a real device is essential in the early stage.<\/p>\n<p>Here are several ways to do that from our experience:<\/p>\n<ul>\n<li>One way is to allocate some mobile device and use it as a BLE host emulator. For example an <strong>Android phone or an iPhone<\/strong>. Create an app that would emulate the host device and you are ready to run the tests.<\/li>\n<li>Set up a service on a <strong>desktop\/laptop machine<\/strong>. This would be ideal in case you want to keep all integration and test environments running from a single place.<\/li>\n<li>Use one of the <strong>prototyping boards<\/strong> with a bluetooth module. The big advantage in this case is that you can use exactly the same Bluetooth module as you have on your product. Plus you can set it once and put it somewhere nearby in the office running 24\/7. And you can select one with the Operating system of your choice.<\/li>\n<\/ul>\n<p>The big advantage of iOS and Android platforms in this case is their well done foundation for BLE, so there is no need to bother about low level stuff like managing connections, security, etc (unless that is a crucial part of your solution). The same applies for Mac apps.<\/p>\n<p>If you\u2019d like to run your Emulator equally on a Mac laptop (when developing) and Linux-based board (when running integration tests) there is also a quick solution. Check out <a href=\"https:\/\/github.com\/sandeepmistry\/bleno\" target=\"_blank\" rel=\"noopener noreferrer\">Bleno<\/a>\u00a0\u2013 Node JS app which you can extend to match your own needs. It is based on a BlueZ library and is probably the quickest solution to setup.<\/p>\n<p class=\"upgrades\">Choosing between Bluetooth Classic VS Bluetooth Low Energy?\u00a0We have a solid expertise with using both Bluetooth Classic and BLE in mobile apps on Android and iOS platforms for our clients.\u00a0<a href=\"http:\/\/stanfy.com\/get-in-touch\">Let&#8217;s talk!<\/a><\/p>\n<h3>Other useful links<\/h3>\n<ul>\n<li><a href=\"https:\/\/www.bluetooth.org\/en-us\/specification\/adopted-specifications\">Bluetooth Core specifications<\/a> &#8211; huge documents but generally well organised<\/li>\n<li><a href=\"https:\/\/developer.bluetooth.org\/TechnologyOverview\/Pages\/BLE.aspx\">BLE overview<\/a> at Bluetooth.org<\/li>\n<li>\u201c<a href=\"http:\/\/www.amazon.com\/Getting-Started-Bluetooth-Low-Energy\/dp\/1491949511\" target=\"_blank\" rel=\"noopener noreferrer\">Getting started with Bluetooth Low Energy<\/a>\u201d book<\/li>\n<li><a href=\"http:\/\/www.mt-system.ru\/sites\/default\/files\/docs\/documents\/bluetooth_le_comparison.pdf\">BLE physical capabilities and comparison to Bluetooth Classic<\/a><\/li>\n<li><a href=\"https:\/\/github.com\/sandeepmistry\/bleno\">Bleno<\/a> peripheral simulator library<\/li>\n<li><a href=\"https:\/\/developer.apple.com\/library\/ios\/documentation\/NetworkingInternetWeb\/Conceptual\/CoreBluetooth_concepts\/AboutCoreBluetooth\/Introduction.html#\/\/apple_ref\/doc\/uid\/TP40013257\">Apple Core Bluetooth programming Guide<\/a><\/li>\n<li><a href=\"https:\/\/developer.android.com\/guide\/topics\/connectivity\/bluetooth.html\">BLE in Android<\/a><\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<p><em>If you find the article\u00a0valuable \u2013\u00a0please <strong>share it with your network<\/strong> and help to spread the word. If you have something to add, post a comment. Thank you!<\/em><\/p>\n","protected":false},"excerpt":{"rendered":"<p>As we found from our own experience at Stanfy, before diving too deeply into hacking with BLE enabled hardware, it is good to understand some&#8230;<\/p>\n","protected":false},"author":63,"featured_media":14608,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[800],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<meta name=\"description\" content=\"Overview of Bluetooth Low Energy,it\u2019s distinguishable features, architecture, and data formats. Tools that can be used for software development for device.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.intellectsoft.net\/blog\/ble-essentials-for-device-smartphone-software-development\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Bluetooth Low Energy: Tools for Software Development for Device\" \/>\n<meta property=\"og:description\" content=\"Overview of Bluetooth Low Energy,it\u2019s distinguishable features, architecture, and data formats. Tools that can be used for software development for device.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.intellectsoft.net\/blog\/ble-essentials-for-device-smartphone-software-development\/\" \/>\n<meta property=\"og:site_name\" content=\"Intellectsoft Blog\" \/>\n<meta property=\"article:published_time\" content=\"2015-09-10T17:20:03+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2019-10-08T15:12:22+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/iPhoneBluetoothLEArduino.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1874\" \/>\n\t<meta property=\"og:image:height\" content=\"808\" \/>\n<meta name=\"twitter:card\" content=\"summary\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/#website\",\"url\":\"https:\/\/www.intellectsoft.net\/blog\/\",\"name\":\"Intellectsoft Blog\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.intellectsoft.net\/blog\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/ble-essentials-for-device-smartphone-software-development\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/iPhoneBluetoothLEArduino.png\",\"width\":1874,\"height\":808},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/ble-essentials-for-device-smartphone-software-development\/#webpage\",\"url\":\"https:\/\/www.intellectsoft.net\/blog\/ble-essentials-for-device-smartphone-software-development\/\",\"name\":\"Bluetooth Low Energy: Tools for Software Development for Device\",\"isPartOf\":{\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/ble-essentials-for-device-smartphone-software-development\/#primaryimage\"},\"datePublished\":\"2015-09-10T17:20:03+00:00\",\"dateModified\":\"2019-10-08T15:12:22+00:00\",\"author\":{\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/#\/schema\/person\/934d88e6448434bc0f87550678a8637e\"},\"description\":\"Overview of Bluetooth Low Energy,it\\u2019s distinguishable features, architecture, and data formats. Tools that can be used for software development for device.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.intellectsoft.net\/blog\/ble-essentials-for-device-smartphone-software-development\/\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/#\/schema\/person\/934d88e6448434bc0f87550678a8637e\",\"name\":\"Anastasiia Hibaieva\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/5e777493cd8ae0902fee5b35c44765ce?s=96&d=mm&r=g\",\"caption\":\"Anastasiia Hibaieva\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/posts\/10331"}],"collection":[{"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/users\/63"}],"replies":[{"embeddable":true,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/comments?post=10331"}],"version-history":[{"count":0,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/posts\/10331\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/media\/14608"}],"wp:attachment":[{"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/media?parent=10331"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/categories?post=10331"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/tags?post=10331"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}