{"id":20428,"date":"2020-05-29T18:52:11","date_gmt":"2020-05-29T15:52:11","guid":{"rendered":"https:\/\/www.intellectsoft.net\/blog\/?p=20428"},"modified":"2020-06-19T15:54:12","modified_gmt":"2020-06-19T12:54:12","slug":"java-reactive-programming-a-comprehensive-guide-for-beginners","status":"publish","type":"post","link":"https:\/\/www.intellectsoft.net\/blog\/java-reactive-programming-a-comprehensive-guide-for-beginners\/","title":{"rendered":"Java Reactive Programming: A Comprehensive Guide for Beginners"},"content":{"rendered":"<h2>Java Reactive Programming: Something Old, Something New<\/h2>\n<p>Over time some concepts can fade away but later return as new ones as they are applied in the new environment. The same thing has happened with reactive programming. The term has been introduced to the IT world back in the 1960-70s, and nowadays, it came back to be applied in the development of mobile and web applications.<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter size-full wp-image-20435\" src=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/ggg.jpg\" alt=\"Java Reactive Programming 1\" width=\"939\" height=\"625\" srcset=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/ggg.jpg 939w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/ggg-300x200-1.jpg 300w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/ggg-768x511-1.jpg 768w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/ggg-600x399-1.jpg 600w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/ggg-450x300-1.jpg 450w\" sizes=\"(max-width: 939px) 100vw, 939px\" \/><\/p>\n<p>What is reactive programming? What are the benefits of reactive programming in Java apps? Let\u2019s dive deep into this topic, study the examples, compare it to imperative programming, and highlight the advantages of this type of programming for apps as well as for business.<\/p>\n<h2>What Is Reactive Programming Java?| Let\u2019s Put It Simple<\/h2>\n<p>The term &#8220;Reactive Programming&#8221; is not a buzzword anymore, and over the years, it has acquired a number of meanings that might seem a little bit messy and unclear. We go with the most simple one that clearly defines the concept.<\/p>\n<p>Reactive Programming (RP) is a programming model that is designed to cope with asynchronous events (data streams) and the specific act of producing a change, in other words, it means that modifications are implemented to the execution environment in an effective ceratin order. Take a look at the sequences of events in real life in order to have a full understanding of the reactive programming Java paradigm.<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter size-full wp-image-20436\" src=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/hhkj.jpg\" alt=\"Java Reactive Programming 2\" width=\"939\" height=\"625\" srcset=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/hhkj.jpg 939w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/hhkj-300x200-1.jpg 300w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/hhkj-768x511-1.jpg 768w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/hhkj-600x399-1.jpg 600w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/hhkj-450x300-1.jpg 450w\" sizes=\"(max-width: 939px) 100vw, 939px\" \/><\/p>\n<p>For instance, Ann wants to have a party on a Friday night. She has to invite her friends, clean the apartment, and cook dinner. What options do we have here?<\/p>\n<p>1. Ann finishes her work and calls her friends. Then she heads to the supermarket to buy food, waits in line to pay, and goes home. Once at home, she starts cooking. When dinner is ready, she cleans the apartment, gusts arrive, and most likely wait till Ann finishes all the work. The party starts later.<\/p>\n<p>This is a description of a sync approach to the problem (request), as all the tasks are completed one after another. As a result, it will take a long time for the party to start.<\/p>\n<p>2. Ann finishes her work and sends invitations to her friends. Then she orders food delivery online and heads home to clean the apartment. By the time the apartment is clean, food is delivered. Ann is having dinner without her friends.<\/p>\n<p>This is an example of the async approach.<\/p>\n<p>3. Ann finishes her work and sends invitations to her friends. She orders food delivery online and heads home to clean the apartment. She finishes cleaning and gets the delivery. But this time she waits for her friends to arrive and start the party.<\/p>\n<p>The last option is a description of the reactive approach. That is to say. The RP is when you wait for async actions to complete (make a change) to proceed with further steps.<\/p>\n<p>For better understanding, think of the experiment at your chemistry class. You have to combine two or more elements in order to get a certain reaction. Similar processes lay behind the reactive paradigm concept.<\/p>\n<h2>Reactive Programming Java: Example<\/h2>\n<p>Reactive programming Java paradigm concept is clear, but where, when, and how is it used?<\/p>\n<p>The RP is an effective solution for the applications that are high-load or multiple-user. This approach suits:<\/p>\n<ul>\n<li>Chats and social networks;<\/li>\n<li>Video and audio applications;<\/li>\n<li>Games.<\/li>\n<\/ul>\n<p>It can also be used for such components in the apps as:<\/p>\n<ul>\n<li>Real-time data streaming;<\/li>\n<li>Load balancers and proxy servers;<\/li>\n<li>AI\/ML;<\/li>\n<li>Server code that serves highly interactive UI elements.<\/li>\n<\/ul>\n<p>For instance, Netflix developers use Microsoft&#8217;s open-source reactive programming library Rx (Reactive Extensions) for their web application. Rx allows them to build complex and asynchronous programs much easier. Web applications like Netflix are reactive as code reacts to different events (mouse clicks, keypresses, async data arrival from the server, etc.). Thanks to the Rx library, developers can design evens as a collection of data and not as a series of callbacks. Now when events are modeled as collections, developers can make changes with events in the same way they transform in-memory collections. Events are pushed asynchronously from producer to consumer, and the consumer reacts to the available data as it comes.<\/p>\n<h2>Java Reactive Programming Performance| How Is It\u00a0 Done?<\/h2>\n<p>The RP provides higher performance for Java apps and has lower memory requirements. It is achieved by avoiding blocking calls that always lead to process and context switches in the operating system.<\/p>\n<p>Now when the requirements for web apps have become much higher, the number of users has increased as well as a number of requests, it is better to use the RP approach in the application. In RP, the program flow is seen as a sequence of events that occur asynchronously.<\/p>\n<p>Java reactive programming consists of the four main building blocks:<\/p>\n<ul>\n<li>Observables (the data source\/stream that cam emit a number of values, one or none; it can also emit errors and be infinite or finite);<\/li>\n<li>Subscribers (the ones who subscribe to Observables, they use the data provided, receive the errors and completion events from the Observable);<\/li>\n<li>Operators (used to create, transform, filter, and combine Observables);<\/li>\n<li>Schedulers (allows to easily add threading to our Observables and Subscribers).<\/li>\n<\/ul>\n<p>When using reactive programming, the spine of your application will consist of data streams that are going to convey events, calls, messages, even failures. The RP allows you to observe the streams and react when a value is emitted. In code, the developer creates streams of anything that can change or happen (click events, cache events, HTTP requests, etc.); thus, the application becomes asynchronous. To implement the RP modules into the app and compose async, event-driven programs using an observable sequence, use Rx (Reactive Extension) that gives you a great toolbox. Now you can combine, filter, merge, create, and transform data streams that are called Observables.<\/p>\n<p>Today you can find a number of libraries (Rx, Spring, etc.) that enable reactive programming implementation into your app with different tools and implementations.<\/p>\n<h2>Imperative vs. Reactive Programming Java| The Key Differences<\/h2>\n<p>Imperative programming paradigm and reactive one are two different ways to do the app development. Java is an imperative language. Its focus is on how to achieve the final result.<\/p>\n<p>The imperative paradigm uses statements to change a program&#8217;s state. The concept is the same as with an imperative mood in the natural language. For example, if we want someone to do something, we have to express commands. The same happens within the imperative paradigm. The program consists of commands that the computer should perform. It focuses on how the program should operate. For instance, think of the salad that you want to eat. The focus is on creating a salad that you want to eat. To achieve the result, you go to the kitchen, get ingredients, chop and cut the ingredients, put them together, and send it to the user.<\/p>\n<p>It follows that in imperative programming, the code is executed according to the statements that describe every step the program should do in order to complete the task. In comparison with reactive programming, in imperative programming, you pull the data while in reactive, you push it.<\/p>\n<p>These two paradigms can be used together in order to serve different purposes. For instance, business logic is written imperative style, while event handling is performed by the RP. It means that you can write the code in an imperative paradigm but use a reactive one to perform certain functions.<\/p>\n<h2>Advantages of Reactive Programming in Java: Why Is It Used?<\/h2>\n<p>Learning reactive programming is not an easy task, but once you get to understand it, you&#8217;ll simplify your work in many ways. So, what are the benefits of Rx for application development?<\/p>\n<p>The RP helps developers to increase the performance of an app as it can process big volumes of data very quickly. The RP modules are:<\/p>\n<ul>\n<li>More flexible;<\/li>\n<li>Resilient and scalable;<\/li>\n<li>More tolerant of failure;<\/li>\n<li>Use resources efficiently;<\/li>\n<li>Less latent;<\/li>\n<li>Highly responsive<\/li>\n<\/ul>\n<p>The reactive programming modules are very responsive. They are capable of giving users effective and interactive feedback. As a result, the app has improved UX.<\/p>\n<p>The RP code is clean and more concise that makes it easier to read and scale. So, the changes, modifications, and updates can be done in a simplified way. These features lead us to one more advantage of the RP &#8211; it is time-effective.<\/p>\n<p>Another advantage of reactive programming is that it has better error handling. One more great feature is that you use the RP for backpressure. It means that the consumer can control the flow of the data emitted by the publisher. Thanks to this mechanism, the flow of traffic is under control between the user and the provider, and it also helps the service to avoid &#8220;out of memory&#8221; problems.<\/p>\n<p>Although the understanding of the concept and learning RP might take a while and requires a lot of dedicated work, studying, etc., the paradigm is extremely useful nowadays. It comes with a number of advantages that facilitate the work of developers, enhance app performance, and what is more, improve user experience. Today, we can say that UX is one of the most important app features as it helps to personalize the user journey.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Java Reactive Programming: Something Old, Something New Over time some concepts can fade away but later return as new ones as they are applied in&#8230;<\/p>\n","protected":false},"author":63,"featured_media":20429,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[3,6],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<meta name=\"description\" content=\"In this article, we will discuss Java reactive programming, its meaning, examples, performance, and advantages over the imperative programming.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.intellectsoft.net\/blog\/java-reactive-programming-a-comprehensive-guide-for-beginners\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Java Reactive Programming: Meaning, Examples, Advantages\" \/>\n<meta property=\"og:description\" content=\"In this article, we will discuss Java reactive programming, its meaning, examples, performance, and advantages over the imperative programming.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.intellectsoft.net\/blog\/java-reactive-programming-a-comprehensive-guide-for-beginners\/\" \/>\n<meta property=\"og:site_name\" content=\"Intellectsoft Blog\" \/>\n<meta property=\"article:published_time\" content=\"2020-05-29T15:52:11+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-06-19T12:54:12+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/facebook_1200-630-copy-1.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"1200\" \/>\n\t<meta property=\"og:image:height\" content=\"630\" \/>\n<meta name=\"twitter:card\" content=\"summary\" \/>\n<meta name=\"twitter:image\" content=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Twitter_1024_512-Copy-1.jpg\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/#website\",\"url\":\"https:\/\/www.intellectsoft.net\/blog\/\",\"name\":\"Intellectsoft Blog\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.intellectsoft.net\/blog\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/java-reactive-programming-a-comprehensive-guide-for-beginners\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/1430-600-3.jpg\",\"width\":1430,\"height\":600,\"caption\":\"Java Reactive Programming cover\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/java-reactive-programming-a-comprehensive-guide-for-beginners\/#webpage\",\"url\":\"https:\/\/www.intellectsoft.net\/blog\/java-reactive-programming-a-comprehensive-guide-for-beginners\/\",\"name\":\"Java Reactive Programming: Meaning, Examples, Advantages\",\"isPartOf\":{\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/java-reactive-programming-a-comprehensive-guide-for-beginners\/#primaryimage\"},\"datePublished\":\"2020-05-29T15:52:11+00:00\",\"dateModified\":\"2020-06-19T12:54:12+00:00\",\"author\":{\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/#\/schema\/person\/934d88e6448434bc0f87550678a8637e\"},\"description\":\"In this article, we will discuss Java reactive programming, its meaning, examples, performance, and advantages over the imperative programming.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.intellectsoft.net\/blog\/java-reactive-programming-a-comprehensive-guide-for-beginners\/\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/#\/schema\/person\/934d88e6448434bc0f87550678a8637e\",\"name\":\"Anastasiia Hibaieva\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/5e777493cd8ae0902fee5b35c44765ce?s=96&d=mm&r=g\",\"caption\":\"Anastasiia Hibaieva\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/posts\/20428"}],"collection":[{"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/users\/63"}],"replies":[{"embeddable":true,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/comments?post=20428"}],"version-history":[{"count":0,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/posts\/20428\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/media\/20429"}],"wp:attachment":[{"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/media?parent=20428"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/categories?post=20428"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/tags?post=20428"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}