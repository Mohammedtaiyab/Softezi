{"id":13678,"date":"2016-09-15T16:30:29","date_gmt":"2016-09-15T13:30:29","guid":{"rendered":"https:\/\/stanfy.com\/?p=13678"},"modified":"2019-10-15T12:23:39","modified_gmt":"2019-10-15T09:23:39","slug":"testing-of-android-custom-firmware","status":"publish","type":"post","link":"https:\/\/www.intellectsoft.net\/blog\/testing-of-android-custom-firmware\/","title":{"rendered":"Custom Android Builds: Tools and Techniques for Manual and Automated Tests"},"content":{"rendered":"<p>All code changes provoke some kind of effects and we need to know how these changes impact on general \u00a0functionality. Android apps are working with a limited memory, CPU power and flashing new ROM associated with some changes inside AOSP, so in this case it is very important to debug, test and optimize your new ROM. Having a reasonable test coverage for your new AOSP helps you to enhance and maintain the whole system and to deliver a high-quality product.<\/p>\n<p>Installing a new ROM is a huge gamble for your fleet of Android devices, because you don&#8217;t want to brick them or cause broken system features, so it\u2019s highly recommended to run hardware and performance tests. These test runs will allow you to determine whether or not your tablet is stable enough for daily use.<\/p>\n<p>This article is a part of a bigger\u00a0<a href=\"https:\/\/stanfy.com\/embedded-android\/\">guide about Embedded Android<\/a>\u00a0that intends to cover a broad set of topics about using Android as a platform for embedded devices.<\/p>\n<p>Before we begin, we need to decide what elements we want to test. In our case, there are three things we\u2019re going to be focusing on:<\/p>\n<ul>\n<li>Software<\/li>\n<li>Hardware<\/li>\n<li>Android Compatibility<\/li>\n<\/ul>\n<p>Our goal is to ship a high-quality product which is working smoothly, has a great battery life, no crashes, works with all Android apps, delivers \u00a0great performance, etc. So let\u2019s define what we want to test.<\/p>\n<h3>Software<\/h3>\n<p>Firstly, we need to make sure that a new ROM contains our changes and works as we expected.<\/p>\n<p>Secondly, we need to check device performance (e.g. graphics rendering, UI smoothness, loading time, etc.) \u00a0because this is one of the biggest problems on mobile devices. More CPU power means less battery life and vice versa, so we want to know if a new ROM has optimal settings.<\/p>\n<p class=\"upgrades\">If you are looking for the help with customization of your own build of Embedded Android that was built\u00a0from AOSP or any other open-source version just\u00a0<a data-sumome-listbuilder-id=\"1d56ac5a-0132-41cd-8202-2e2d7ab93c8a\">let us know<\/a>.<\/p>\n<h3>Hardware<\/h3>\n<p>Because of the\u00a0huge amount of different devices we need to have a clear list of features that require testing. In our <a href=\"https:\/\/stanfy.com\/blog\/build-and-run-android-from-aosp-source-code-to-a-nexus-7\/\">Bus Stop example<\/a> we need to check:<\/p>\n<p><strong>Multimedia:<\/strong><\/p>\n<ul>\n<li>Audio &#8211; For playing sounds\/music or voice response for disabled people<\/li>\n<li>Video &#8211; For displaying ads or useful information<\/li>\n<\/ul>\n<p><strong>Networking:<\/strong><\/p>\n<ul>\n<li>3G\/LTE connection &#8211; For updates and downloading new content<\/li>\n<li>Wi-Fi &#8211; For updates and downloading new content<\/li>\n<\/ul>\n<p><strong>Sensors:<\/strong><\/p>\n<ul>\n<li>Accelerometer &#8211; To display UI in proper orientation<\/li>\n<li>Gyroscope &#8211; To make ads more interactive<\/li>\n<li>Light &#8211; To adjust the screen light during the \u00a0day<\/li>\n<\/ul>\n<p><strong>System:<\/strong><\/p>\n<ul>\n<li>Camera (photo, video) &#8211; Can be used for interactive ads<\/li>\n<li>OpenGL ES &#8211; To display HD graphics<\/li>\n<li>Touch screen &#8211; To have control over the device<\/li>\n<li>Storage (read, write) &#8211; To store content and apps<\/li>\n<li>CPU, GPU &#8211; To make sure ROM works smoothly<\/li>\n<li>RAM usage &#8211; To prevent overload and memory leaks<\/li>\n<\/ul>\n<h3>Compatibility<\/h3>\n<p>Any changes in AOSP can cause problems with running native apps. In this case we need to make sure that nothing is broken. To solve this problem you can run <a href=\"https:\/\/source.android.com\/compatibility\/cts\/index.html\">Google Compatibility tests<\/a>. This test set can be performed manually and on CI.<\/p>\n<p><strong>Google provides predefined plans:<\/strong><\/p>\n<ul>\n<li>CTS \u2014 all tests required for compatibility<\/li>\n<li>Signature \u2014 the signature verification of all public APIs<\/li>\n<li>Android \u2014 tests for the Android APIs<\/li>\n<li>Java \u2014 tests for the Java core library<\/li>\n<li>VM \u2014 tests for ART or Dalvik<\/li>\n<li>Performance \u2014 performance tests for your implementation<\/li>\n<\/ul>\n<p>These tests produce reports with boolean True\/False conditions for each test case. You\u2019ll get a short explanation if something went wrong.<\/p>\n<h2>Manual Tests vs CI Automation<\/h2>\n<p>So now we know <em>what<\/em> we want to test, it\u2019s time to decide <em>how<\/em> we\u2019re going to run these tests.<\/p>\n<p>There are two ways to run such tests: manually or using CI automation.<\/p>\n<h3>Manual Tests<\/h3>\n<p>The manual method is a fairly simple and very fast way to verify your ROM. Everything \u00a0you need is already implemented, so just download the app and you\u2019re ready to go with your hardware testing. On \u00a0the other hand manual testing requires more effort, attention and planning. Also manual testing involves running apps for testing by your own hands. You need to download, install, run, click all menu items and analyze test results to make sure they match the expected results. This is not a problem \u00a0if you only have \u00a0a couple devices with a new ROM, otherwise you\u2019re in trouble.<\/p>\n<p>If your device farm has a lot of different devices and new ROM versions are released regularly, \u00a0you are going to need automation. There are a couple ways to implement a test suite and none of them are easy or fast.<\/p>\n<p>Google provides free compatibility tests for different OS versions which can provide you all information about basic hardware\/software checks.<\/p>\n<h3>Continuous Integration Tests<\/h3>\n<p>Another way of freeing yourself from manual testing is to \u00a0implement automation cases for your custom apps. For example you can write test scripts which will follow the same steps \u00a0you are taking manually, e.g. installing test app, running it, clicking menu items from your test plan and displaying report. The most efficient feature you could implement is \u201cone click testing\u201d, where you press the \u201cStart\u201d button on CI and simply wait for the results.<\/p>\n<p>In an ideal world you would have a full-stack automation process, such as:<\/p>\n<ul>\n<li>Build a new version of ROM<\/li>\n<li>Flash device with this ROM<\/li>\n<li>Run Hardware\/Software\/Compatibility tests against new ROM version<\/li>\n<li>Check results<\/li>\n<\/ul>\n<p>Building a suite like this makes sense if you have a huge project and want not only to save time, but also to ensure efficiency of work, distributed team, regression and long testing cycle.<\/p>\n<h2>How to get and install test apps<\/h2>\n<p>Let\u2019s discuss some options for manual checks. There are two ways to install the required apps \u00a0for testing your new ROM: using Play Market or ADB (or any other tool). Obviously, to install an apk file you first of all need to get hold of it.<\/p>\n<p>One of the easiest ways to download an apk file is using an online downloader. For example you can use the <a href=\"https:\/\/apkpure.com\/\">Apkpure<\/a> site. Simply copy a link to an app from Play Market and paste it to the Apkpure site.<\/p>\n<p><a href=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Copy-url-to-download-the-apk-file.png\"><img loading=\"lazy\" class=\"aligncenter wp-image-13692\" src=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Copy-url-to-download-the-apk-file.png\" alt=\"Copy url to download the apk file\" width=\"740\" height=\"315\" srcset=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Copy-url-to-download-the-apk-file.png 1600w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Copy-url-to-download-the-apk-file-300x128.png 300w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Copy-url-to-download-the-apk-file-768x326.png 768w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Copy-url-to-download-the-apk-file-1024x435.png 1024w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Copy-url-to-download-the-apk-file-600x255.png 600w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Copy-url-to-download-the-apk-file-450x191.png 450w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Copy-url-to-download-the-apk-file-1000x425.png 1000w\" sizes=\"(max-width: 740px) 100vw, 740px\" \/><\/a><\/p>\n<p class=\"upgrades\">You need to copy a link to the app from the browser here.<\/p>\n<p><a href=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Pasting-url-to-apkpure-website.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-13693\" src=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Pasting-url-to-apkpure-website.jpg\" alt=\"Pasting url to apkpure website\" width=\"740\" height=\"382\" srcset=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Pasting-url-to-apkpure-website.jpg 1600w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Pasting-url-to-apkpure-website-300x155-1.jpg 300w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Pasting-url-to-apkpure-website-768x396-1.jpg 768w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Pasting-url-to-apkpure-website-1024x528-1.jpg 1024w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Pasting-url-to-apkpure-website-600x309-1.jpg 600w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Pasting-url-to-apkpure-website-450x232-1.jpg 450w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Pasting-url-to-apkpure-website-1000x516-1.jpg 1000w\" sizes=\"(max-width: 740px) 100vw, 740px\" \/><\/a><\/p>\n<p class=\"upgrades\">Paste link recently copied from address line to the search field on <a href=\"https:\/\/apkpure.com\">Apkpure.com<\/a>\u00a0website.<\/p>\n<p>You\u2019ll have an *.apk file a few moments later. Please make sure your device is connected via USB and <a href=\"https:\/\/www.kingoapp.com\/root-tutorials\/how-to-enable-usb-debugging-mode-on-android.htm\">turn On USB Debugging mode<\/a>. Run command below once it is ready to install the selected app.<\/p>\n<pre class=\"lang:default decode:true\">$ adb install path\/to\/app.apk<\/pre>\n<p>So, let\u2019s review a couple Apps in the Google Play market which can help you to run system-wide Android ROM tests against your build that run on your device.<\/p>\n<h2>How to run tests<\/h2>\n<p>In this section we want to understand how to run tests manually using the apps and tools we have chosen.<\/p>\n<p>Here we want to focus on tools available \u201cout of the box\u201d which do not require any additional configurations or support. The following apps have basic functionality and high productivity.<\/p>\n<h3>AnTuTu Tester<\/h3>\n<p><a href=\"https:\/\/play.google.com\/store\/apps\/details?id=com.antutu.tester\">AnTuTu Tester<\/a> is a hardware tester for android. This tool is good for performing basic checks (e.g. making sure that all device sensors are alive or that multi-touch is working fine) and it allows you to test:<\/p>\n<ul>\n<li>Battery &#8211; \u00a0App asks you to keep your device on and performs stress testing to calculate a score.<\/li>\n<li>Multi-touch &#8211; App displays a number of touches on the screen, so you can make sure this functionality works as expected.<\/li>\n<li>System information: Includes info about CPU, GPU, Memory, SD Card, Screen, WiFi, GPS.<\/li>\n<\/ul>\n<p>The app also includes a built-in benchmark test, so you can see how your changes have affected performance.<\/p>\n<p><a href=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/AnTuTu-Tester.jpg\"><img loading=\"lazy\" class=\"wp-image-13685\" src=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/AnTuTu-Tester.jpg\" alt=\"AnTuTu Tester\" width=\"740\" height=\"1055\" srcset=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/AnTuTu-Tester.jpg 1796w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/AnTuTu-Tester-210x300.jpg 210w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/AnTuTu-Tester-768x1095.jpg 768w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/AnTuTu-Tester-718x1024.jpg 718w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/AnTuTu-Tester-600x855.jpg 600w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/AnTuTu-Tester-316x450.jpg 316w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/AnTuTu-Tester-702x1000.jpg 702w\" sizes=\"(max-width: 740px) 100vw, 740px\" \/><\/a><\/p>\n<h3>Z-DeviceTest<\/h3>\n<p><a href=\"https:\/\/play.google.com\/store\/apps\/details?id=zausan.zdevicetest\">Z-DeviceTest<\/a> lets you check your Android device sensors\u2019 &#8220;health&#8221; in an intuitive and comprehensive way, offering in-depth analysis of all the characteristics of your device.<\/p>\n<p>The app works in a fairly similar way to the \u00a0AnTuTu Tester, but it requires Google Play services to be installed on the device to run.<\/p>\n<p><a href=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Z-DeviceTest.jpg\"><img loading=\"lazy\" class=\"wp-image-13686\" src=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Z-DeviceTest.jpg\" alt=\"Z-DeviceTest\" width=\"740\" height=\"395\" srcset=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Z-DeviceTest.jpg 2500w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Z-DeviceTest-300x160.jpg 300w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Z-DeviceTest-768x410.jpg 768w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Z-DeviceTest-1024x546.jpg 1024w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Z-DeviceTest-600x320.jpg 600w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Z-DeviceTest-450x240.jpg 450w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Z-DeviceTest-1000x534.jpg 1000w\" sizes=\"(max-width: 740px) 100vw, 740px\" \/><\/a><\/p>\n<p>This app allows you to:<\/p>\n<ul>\n<li>Check manufacturer&#8217;s technical information.<\/li>\n<li>Test functioning of all your sensors, like accelerometers, gyroscopes, magnetometers, barometers, etc.<\/li>\n<li>Measure the accuracy of each sensor.<\/li>\n<li>Test NFC near field communication.<\/li>\n<li>Test Barometer.<\/li>\n<li>Test detection of Navstar satellites.<\/li>\n<\/ul>\n<p>The app includes data about more than 600 different devices, so you can compare your score with other devices and ROMs.<\/p>\n<h3>Sensor Box<\/h3>\n<p><a href=\"https:\/\/play.google.com\/store\/apps\/details?id=imoblife.androidsensorbox\">This app<\/a> is made by IMOBLIFE INC and essentially performs the same functions as the previous two, but it has richer graphics. Every device sensor has a specific 3D illustration of its work (e.g. ball on a table for gyro sensor, or flower which grows if light sensor works), so it very clearly demonstrates the \u00a0working principle of each sensor. This is a cool tool if you need to show your users or clients how beautifully your new ROM works.<\/p>\n<p>Sensors included:<\/p>\n<ul>\n<li>Gyroscope<\/li>\n<li>Light<\/li>\n<li>Orientation<\/li>\n<li>Proximity<\/li>\n<li>Temperature<\/li>\n<li>Accelerometer<\/li>\n<li>Sound<\/li>\n<li>Magnetic Field<\/li>\n<li>Pressure<\/li>\n<\/ul>\n<p>The app will show you all available sensors immediately after launch. If you assume there are going to be some hardware issues during development or alpha testing and want to have an easy way to check, this app will help you.<\/p>\n<p>As you can see from the screenshot, we have some unavailable sensors and the app detected them immediately.<\/p>\n<p><a href=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Sensor-Box.jpg\"><img loading=\"lazy\" class=\"wp-image-13687\" src=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Sensor-Box.jpg\" alt=\"Sensor Box\" width=\"740\" height=\"592\" srcset=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Sensor-Box.jpg 2500w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Sensor-Box-300x240.jpg 300w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Sensor-Box-768x615.jpg 768w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Sensor-Box-1024x820.jpg 1024w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Sensor-Box-600x480.jpg 600w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Sensor-Box-450x360.jpg 450w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Sensor-Box-1000x800.jpg 1000w\" sizes=\"(max-width: 740px) 100vw, 740px\" \/><\/a><\/p>\n<p>One more important thing to consider is performance and battery life. All manufacturers have to figure out a way to balance great performance with long battery life. This challenge will affect you as well and you need to be ready to test it.<\/p>\n<h3>Geekbench 3<\/h3>\n<p>This is a well known cross-platform benchmark. Basically, the app displays a score based on CPU\/GPU performance. It might be useful to check this score with the native ROM and with your custom ROM and compare results. It could help you to find out whether \u00a0your ROM has suffered a loss of performance. The app also allows you to store benchmark results online and compare them with the same devices across the world.<\/p>\n<p><a href=\"https:\/\/play.google.com\/store\/apps\/details?id=com.primatelabs.geekbench\">Geekbench 3<\/a> simulates real-world scenarios and quickly and accurately measures mobile processor performance.<\/p>\n<p><a href=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Geekbench-3.jpg\"><img loading=\"lazy\" class=\"wp-image-13688\" src=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Geekbench-3.jpg\" alt=\"Geekbench 3\" width=\"740\" height=\"592\" srcset=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Geekbench-3.jpg 2500w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Geekbench-3-300x240.jpg 300w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Geekbench-3-768x615.jpg 768w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Geekbench-3-1024x820.jpg 1024w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Geekbench-3-600x480.jpg 600w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Geekbench-3-450x360.jpg 450w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Geekbench-3-1000x800.jpg 1000w\" sizes=\"(max-width: 740px) 100vw, 740px\" \/><\/a><\/p>\n<h3>Battery Indicator<\/h3>\n<p><a href=\"https:\/\/play.google.com\/store\/apps\/details?id=com.fulminesoftware.batteryindicator\">This one<\/a> is a tool to monitor battery drain. The app displays:<\/p>\n<ul>\n<li>Estimated time left to discharge.<\/li>\n<li>Temperature.<\/li>\n<li>Voltage.<\/li>\n<li>Charging or discharging velocity in percent per hour.<\/li>\n<li>System&#8217;s information about what drains your battery.<\/li>\n<\/ul>\n<p><a href=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/testing_app_battery_indicator_1-2.png\"><img loading=\"lazy\" class=\"wp-image-13690\" src=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/testing_app_battery_indicator_1-2.png\" alt=\"testing_app_battery_indicator_1-2\" width=\"463\" height=\"740\" srcset=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/testing_app_battery_indicator_1-2.png 1200w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/testing_app_battery_indicator_1-2-188x300.png 188w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/testing_app_battery_indicator_1-2-768x1229.png 768w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/testing_app_battery_indicator_1-2-640x1024.png 640w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/testing_app_battery_indicator_1-2-600x960.png 600w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/testing_app_battery_indicator_1-2-281x450.png 281w, https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/testing_app_battery_indicator_1-2-625x1000.png 625w\" sizes=\"(max-width: 463px) 100vw, 463px\" \/><\/a><\/p>\n<p>It allows you to monitor how your new ROM works with the battery and fix some leaks at the very beginning of development.<\/p>\n<h3>Google Compatibility Tests<\/h3>\n<p>Google Compatibility Tests (CTS) is an official tool recommended by google, so you can be sure your Android will work as expected and it will also help you to receive google certification and eligibility for GMS. This is a cool tool for automations, which you can also use during manual testing.<\/p>\n<p>You can run CTS from Terminal in scope of manual suite and then check result manually, as it provides results that can be read by humans. This is a JAVA based tool, so you need to make sure JAVA 6 is installed. Also, you need to <a href=\"https:\/\/source.android.com\/compatibility\/cts\/downloads.html\">download<\/a> CTS for a specific platform version. Here is an example of how to run it from Terminal:<\/p>\n<pre class=\"lang:default decode:true \">$ path\/to\/android-cts\/tools\/cts-tradefed\r\n\r\n$ run cts --plan PlanName<\/pre>\n<p>You\u2019ll see results in Terminal after a couple minutes. It\u2019s maybe not that convenient to have to read all logs manually, but the information might sometimes be useful.<\/p>\n<p>There is no major difference between all these apps in Play Market and any of them could check your device, but you need a strong Test Plan to follow. You can&#8217;t avoid mistakes altogether when performing manual tests, but your challenge is to reduce them as much as possible.<\/p>\n<h2>Summary<\/h2>\n<p>As result of our testing, we will know the general condition of a new ROM and have the confidence that our shipped product is stable, matches our acceptance criteria and is ready to be used by end users. Don\u2019t try to bite off more than you can chew. Just play around with tools, methods, some best practices and compose your test suite for your own needs. It\u2019s not possible to test everything, but you always need to keep in mind the things we have just discussed, such as:<\/p>\n<ul>\n<li>Hardware.<\/li>\n<li>Software.<\/li>\n<li>Compatibility.<\/li>\n<li>Test plan.<\/li>\n<\/ul>\n<p>Focus on having a straightforward process that defines the workflow of development and which has been covered as much as possible with tests. The main aim is to end up with a happy customer and users who like your product.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>All code changes provoke some kind of effects and we need to know how these changes impact on general \u00a0functionality.<\/p>\n","protected":false},"author":63,"featured_media":13681,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[800],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<meta name=\"description\" content=\"Let\u2019s review some tools and techniques for custom Android Firmware tests. Learn how to develop high-quality product that smoothly works with all Android apps.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.intellectsoft.net\/blog\/testing-of-android-custom-firmware\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Custom Android Firmware Tests| Detailed Analysis\" \/>\n<meta property=\"og:description\" content=\"Let\u2019s review some tools and techniques for custom Android Firmware tests. Learn how to develop high-quality product that smoothly works with all Android apps.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.intellectsoft.net\/blog\/testing-of-android-custom-firmware\/\" \/>\n<meta property=\"og:site_name\" content=\"Intellectsoft Blog\" \/>\n<meta property=\"article:published_time\" content=\"2016-09-15T13:30:29+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2019-10-15T09:23:39+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Manual-Testing-Your-New-AOSP.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"2560\" \/>\n\t<meta property=\"og:image:height\" content=\"1086\" \/>\n<meta name=\"twitter:card\" content=\"summary\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/#website\",\"url\":\"https:\/\/www.intellectsoft.net\/blog\/\",\"name\":\"Intellectsoft Blog\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.intellectsoft.net\/blog\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/testing-of-android-custom-firmware\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.intellectsoft.net\/blog\/wp-content\/uploads\/Manual-Testing-Your-New-AOSP.jpg\",\"width\":2560,\"height\":1086},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/testing-of-android-custom-firmware\/#webpage\",\"url\":\"https:\/\/www.intellectsoft.net\/blog\/testing-of-android-custom-firmware\/\",\"name\":\"Custom Android Firmware Tests| Detailed Analysis\",\"isPartOf\":{\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/testing-of-android-custom-firmware\/#primaryimage\"},\"datePublished\":\"2016-09-15T13:30:29+00:00\",\"dateModified\":\"2019-10-15T09:23:39+00:00\",\"author\":{\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/#\/schema\/person\/934d88e6448434bc0f87550678a8637e\"},\"description\":\"Let\\u2019s review some tools and techniques for custom Android Firmware tests. Learn how to develop high-quality product that smoothly works with all Android apps.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.intellectsoft.net\/blog\/testing-of-android-custom-firmware\/\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/#\/schema\/person\/934d88e6448434bc0f87550678a8637e\",\"name\":\"Anastasiia Hibaieva\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.intellectsoft.net\/blog\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/5e777493cd8ae0902fee5b35c44765ce?s=96&d=mm&r=g\",\"caption\":\"Anastasiia Hibaieva\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/posts\/13678"}],"collection":[{"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/users\/63"}],"replies":[{"embeddable":true,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/comments?post=13678"}],"version-history":[{"count":0,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/posts\/13678\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/media\/13681"}],"wp:attachment":[{"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/media?parent=13678"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/categories?post=13678"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.intellectsoft.net\/blog\/wp-json\/wp\/v2\/tags?post=13678"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}